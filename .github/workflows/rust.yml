name: CI

on:
  pull_request:
  push:
    branches:
      - master
  schedule:
    - cron: '0 3 * * 0' # Every sunday at 3am UTC.

jobs:
  build:
    name: Build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-2019, macos-11]
        rust: [stable, beta, nightly]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Install
      run: |
        rustup update
        rustup default ${{ matrix.rust }}
    - name: Build
      run: cargo check --all-targets
      continue-on-error: ${{ matrix.rust == 'nightly' }}

  tests_single_node:
    name: Tests Single node configuration
    needs: build
    strategy:
      matrix:
        version: [ 20.10.5-focal, 21.10.0-focal, ci ]
        secure: [ true, false ]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install
        run: rustup update stable

      - name: Generate certificates
        if: ${{ matrix.secure == true }}
        run: |
          docker-compose --file configure-tls-for-tests.yml up

      - name: Test on single-node EventStoreDB ${{ matrix.version }}
        run: cargo test --package eventstore --test integration single_node
        env:
          CONTAINER_IMAGE_VERSION: ${{ matrix.version }}
          RUST_LOG: integration=debug,eventstore=debug
          RUST_BACKTRACE: 1
          SECURE: ${{ matrix.secure }}

  tests_cluster:
    name: Tests Cluster configuration.
    needs: build
    strategy:
      matrix:
        version: [ 20.10.5-focal, 21.10.0-focal, ci ]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install
        run: rustup update stable
      - name: Set up EventStoreDB ${{ matrix.version }} cluster with Docker Compose
        run: docker-compose up -d

      - name: Test on three-cluster-node EventStoreDB ${{ matrix.version }}
        run: |
          cargo test --package eventstore --test integration -- cluster
          docker-compose down
        env:
          CONTAINER_IMAGE_VERSION: ${{ matrix.version }}
          RUST_LOG: integration=debug,eventstore=debug
          RUST_BACKTRACE: 1

  tests_library:
    name: Tests library unit tests
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install
      run: rustup update stable
    - name: Run library unit tests
      run: cargo test --lib

  linting:
    name: Linting
    needs:
      - tests_single_node
      - tests_library
      - tests_cluster
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install
      run: |
        rustup update stable
        rustup component add clippy-preview
        rustup component add rustfmt
    - name: Linting
      run: cargo clippy --all-features -- -D warnings
    - name: Formatting
      run: cargo fmt -- --check
