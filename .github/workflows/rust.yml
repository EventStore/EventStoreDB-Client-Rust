name: Rust

on:
  - pull_request

jobs:
  build:
    name: Build
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-2019, macos-10.15]
        rust: [stable, beta, nightly]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v1
    - name: Install
      run: rustup default ${{ matrix.rust }}
    - name: Build
      run: cargo check --all-features
      continue-on-error: ${{ matrix.rust == 'nightly' }}
  tests:
    name: Tests on ES Stable
    needs: build
    runs-on: ubuntu-18.04
    services:
      eventstore:
        image: eventstore/eventstore:release-5.0.7
        env:
          EVENTSTORE_DEV: true
        ports:
          - 1113:1113
          - 2113:2113
    steps:
    - uses: actions/checkout@v1
    - name: Run Tests
      run: RUST_BACKTRACE='1' RUST_LOG='eventstore=debug' cargo test

  tests-preview:
    name: Tests on ES 6 preview 3
    needs: tests
    runs-on: ubuntu-18.04
    services:
      eventstore:
        image: eventstore/eventstore:6.0.0-preview3-bionic
        env:
          EVENTSTORE_DEV: true
        ports:
          - 2113:2113
    steps:
      - uses: actions/checkout@v1
      - name: Run Tests
        run: RUST_BACKTRACE='1' RUST_LOG='integration=debug' cargo test --all-features es6::es6_preview_test -- --exact --ignored
      
  linting:
    name: Linting
    needs: tests-preview
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Install
      run: |
        rustup component add clippy-preview
        rustup component add rustfmt
    - name: Linting
      run: cargo clippy --all-features -- -D warnings
    - name: Formatting
      run: cargo fmt -- --check
